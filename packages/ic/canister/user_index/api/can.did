type CanisterStatusResponse = record {
  status : CanisterStatusType;
  memory_size : nat;
  cycles : nat;
  settings : DefiniteCanisterSettings;
  idle_cycles_burned_per_day : nat;
  module_hash : opt vec nat8;
};
type CanisterStatusType = variant { stopped; stopping; running };
type DefiniteCanisterSettings = record {
  freezing_threshold : nat;
  controllers : vec principal;
  memory_allocation : nat;
  compute_allocation : nat;
};
type KnownPrincipalType = variant {
  CanisterIdUserIndex;
  CanisterIdProjectMemberIndex;
  CanisterIdTopicCacheIndex;
  CanisterIdRootCanister;
  CanisterIdPostCache;
  CanisterIdSNSController;
  UserIdGlobalSuperAdmin;
};
type Result = variant { Ok; Err : SetUniqueUsernameError };
type SetUniqueUsernameError = variant {
  UsernameAlreadyTaken;
  SendingCanisterDoesNotMatchUserCanisterId;
  UserCanisterEntryDoesNotExist;
};
type SystemTime = record {
  nanos_since_epoch : nat32;
  secs_since_epoch : nat64;
};
type UpgradeStatus = record {
  version_number : nat64;
  last_run_on : SystemTime;
  failed_canister_ids : vec record { principal; principal };
  successful_upgrade_count : nat32;
};
type UserAccessRole = variant {
  CanisterController;
  ProfileOwner;
  CanisterAdmin;
  ProjectCanister;
};
type UserIndexInitArgs = record {
  known_principal_ids : vec record { KnownPrincipalType; principal };
};
service : (UserIndexInitArgs) -> {
  get_canister_status_from_management_canister : (principal) -> (
      CanisterStatusResponse,
    );
  get_index_details_is_user_name_taken : (text) -> (bool) query;
  get_index_details_last_upgrade_status : () -> (UpgradeStatus) query;
  get_requester_principals_canister_id_create_if_not_exists_and_optionally_allow_referrer : (
      opt principal,
    ) -> (principal);
  get_user_canister_id_from_unique_user_name : (text) -> (opt principal) query;
  get_user_canister_id_from_user_principal_id : (principal) -> (
      opt principal,
    ) query;
  get_user_roles : (principal) -> (vec UserAccessRole) query;
  topup_canisters_that_need_it : () -> ();
  update_index_with_unique_user_name_corresponding_to_user_principal_id : (
      text,
      principal,
    ) -> (Result);
  update_user_add_role : (UserAccessRole, principal) -> ();
  update_user_index_upgrade_user_canisters_with_latest_wasm : () -> (
      UpgradeStatus,
    );
  update_user_remove_role : (UserAccessRole, principal) -> ();
}