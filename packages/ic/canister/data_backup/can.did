type DataBackupInitArgs = record {
  known_principal_ids : opt vec record { KnownPrincipalType; principal };
  access_control_map : opt vec record { principal; vec UserAccessRole };
};
type KnownPrincipalType = variant {
  CanisterIdUserIndex;
  CanisterIdConfiguration;
  CanisterIdProjectMemberIndex;
  CanisterIdTopicCacheIndex;
  CanisterIdRootCanister;
  CanisterIdDataBackup;
  CanisterIdPostCache;
  CanisterIdSNSController;
  UserIdGlobalSuperAdmin;
};
type UserAccessRole = variant {
  CanisterController;
  ProfileOwner;
  CanisterAdmin;
  ProjectCanister;
};
service : (DataBackupInitArgs) -> {
  get_user_roles : (principal) -> (vec UserAccessRole) query;
  get_well_known_principal_value : (KnownPrincipalType) -> (
      opt principal,
    ) query;
  receive_principal_id_to_canister_id_mapping_from_user_index_canister : (
      principal,
      principal,
    ) -> ();
  update_user_add_role : (UserAccessRole, principal) -> ();
  update_user_remove_role : (UserAccessRole, principal) -> ();
}