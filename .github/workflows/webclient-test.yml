name: Web-client tests
on:
  push:
    branches-ignore:
      - main
    paths:
      - "packages/web-client/**"
      - ".github/workflows/webclient-deploy.yml"
      - ".github/workflows/webclient-setup/action.yml"
      - ".github/workflows/webclient-test.yml"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  svelte-check:
    timeout-minutes: 2
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"
      - name: Install dependencies & build
        run: npm i
      - name: Run sync
        run: npm run wc:sync
      - name: Run svelte-check
        run: npm run wc:check

  tests-lighthouse-reports:
    timeout-minutes: 40
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"

      - name: Install dependencies
        run: npm i

      - name: Add Rust wasm target
        run: rustup target add wasm32-unknown-unknown

      - name: Install DFX
        run: DFX_VERSION=0.12.1 sh -ci "$(curl -fsSL https://smartcontracts.org/install.sh)"

      - name: Cache rust dependencies, build output and DFX build cache
        uses: actions/cache@v3
        id: dfx-cache
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
            .dfx/
          key: ${{ runner.os }}-testing-${{ hashFiles('**/Cargo.lock') }}

      - name: Start DFX Server
        if: always()
        run: dfx start --background

      - name: Provision local canister IDs for the canisters
        run: |
          dfx canister create --no-wallet configuration
          dfx canister create --no-wallet individual_user_template
          dfx canister create --no-wallet user_index
          dfx canister create --no-wallet post_cache

      - name: Install canisters
        if: always()
        run: ./scripts/canisters/local_deploy/install_all_canisters_without_test.sh

      - name: Test DFX connection
        if: always()
        run: dfx ping http://localhost:4943

      - name: Run vitest
        run: |
          set -euxo pipefail
          npm run wc:test:vi

      - name: Run Cypress tests
        uses: cypress-io/github-action@v5
        with:
          browser: chrome
          project: ./packages/web-client
          build: npm run wc:build
          start: npm run wc:preview
          command: npm run wc:test:record
          record: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          CYPRESS_PROJECT_ID: uv7vm5
          TEST_HOST: http://localhost:4173

      - name: Lighthouse CI check
        run: |
          npm run wc:build
          npm install -g @lhci/cli
          lhci_host=http://localhost:4174 lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      - name: Stop DFX Server
        run: dfx stop
        if: always()

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: lighthouse-ci-report
          path: lhci_report
          retention-days: 7

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: coverage-report
          path: packages/web-client/coverage/
          retention-days: 7

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: cypress-report
          path: packages/web-client/cypress/reports/mochawesome-report
          retention-days: 7
